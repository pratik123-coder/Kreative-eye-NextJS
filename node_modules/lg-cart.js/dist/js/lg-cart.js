/**!
 * lg-cart.js | 1.1.0 | February 23rd 2019
 * http://sachinchoolur.github.io/lg-cart.js
 * Copyright (c) 2016 Sachin N; 
 * @license GPLv3 
 */(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.Lgcart = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
(function (global, factory) {
    if (typeof define === "function" && define.amd) {
        define([], factory);
    } else if (typeof exports !== "undefined") {
        factory();
    } else {
        var mod = {
            exports: {}
        };
        factory();
        global.lgcart = mod.exports;
    }
})(this, function () {
    'use strict';

    var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];

            for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                }
            }
        }

        return target;
    };

    var cartDefaults = {
        cart: true
    };


    var Cart = function Cart(element) {

        this.el = element;

        this.core = window.lgData[this.el.getAttribute('lg-uid')];
        this.core.s = _extends({}, cartDefaults, this.core.s);

        this.init();

        return this;
    };

    Cart.prototype.init = function () {
        const toolbar = this.core.outer.querySelector('.lg-toolbar'),
            cart = `
            <span class="lg-cart lg-icon">
                <i class="material-icons md-30 md-light vy-icon vy-cart-add"></i>
            </span>`;

        toolbar.insertAdjacentHTML('beforeend', cart);
        this.cart();
    };

    Cart.prototype.cart = function() {
        const _c = this.core,
            icon = _c.outer.querySelector('.vy-icon');

        utils.on(this.el, 'onAfterSlide.lg', () => {
            const flag = _c.items[ _c.index ].inCart;
            toggleClassOnPhoto(_c, flag);
            toggleIcon(icon, flag);
        });

        utils.on( _c.outer.querySelector('.lg-cart'), 'click.lg', () => {
            toggleClassOnPhoto(_c, !_c.items[ _c.index ].inCart);
            toggleCart( icon, _c.items, _c.index );
        });
    };

    const toggleCart = (icon, items, i) => {
        const item = items[i];
        toggleIcon(icon, item.inCart = !item.inCart);
        utils.trigger(document, "onCartChanged", compare(items));
    };

    const toggleClassOnPhoto = (core, flag) => {
        const current = core.outer.querySelector('.lg-current'),
              object = current.querySelector('.lg-object');

        flag ? utils.addClass( object, 'album-photo-incart' ) : 
               utils.removeClass( object, 'album-photo-incart' );
    }

    const toggleIcon = (icon, flag) => {
        utils.removeClass(icon, flag ? 'vy-cart-add' : 'vy-cart-on');
        utils.addClass(icon, flag ? 'vy-cart-on' : 'vy-cart-add');
    };

    const compare = items => items.map(
        ({idx, src, inCart, price}) => ({idx, src, inCart, price})
    );

    Cart.prototype.destroy = function() {
        utils.off(this.el, 'onAfterSlide.lg');
    };

    window.lgModules.cart = Cart;
});

},{}]},{},[1])(1)
});
